trigger:
  batch: true # disable parallel jobs
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  - group: terraform-variables

jobs:
- job: DeployTerraform
  displayName: 'Deploy Terraform Infrastructure to Azure'
  steps:

  - task: DownloadSecureFile@1
    name: DownloadEnv
    displayName: 'Download .env Secure File'
    inputs:
      secureFile: '.env'

  - script: |
      echo "Fixing line endings in .env (Windows to Unix)..."
      sed -i 's/\r$//' $(DownloadEnv.secureFilePath)
      cp $(DownloadEnv.secureFilePath) $(System.DefaultWorkingDirectory)/.env
    displayName: 'Fix .env and move to working directory'

  - task: AzureCLI@2
    displayName: 'Install Terraform & Init'
    inputs:
      azureSubscription: 'bestrong-azure-connection'
      scriptType: bash
      scriptLocation: inlineScript
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      inlineScript: |
        echo "Sourcing environment variables..."
        source ../.env

        echo "Installing Terraform via apt..."
        sudo apt-get update
        sudo apt-get install -y gnupg software-properties-common curl lsb-release
        curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
          sudo tee /etc/apt/sources.list.d/hashicorp.list > /dev/null
        sudo apt-get update && sudo apt-get install terraform -y

        terraform version

        echo "Initializing Terraform..."
        terraform init \
          -backend-config="resource_group_name=bestrong-tfstate-rg" \
          -backend-config="storage_account_name=bestrongtfstate" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=terraform.tfstate"

  - task: AzureCLI@2
    displayName: 'Terraform Validate'
    inputs:
      azureSubscription: 'bestrong-azure-connection'
      scriptType: bash
      scriptLocation: inlineScript
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      inlineScript: |
        echo "Sourcing environment variables..."
        source ../.env

        echo "Validating Terraform configuration..."
        terraform validate

  - task: AzureCLI@2
    displayName: 'Terraform Plan'
    inputs:
      azureSubscription: 'bestrong-azure-connection'
      scriptType: bash
      scriptLocation: inlineScript
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      inlineScript: |
        echo "Sourcing environment variables..."
        source ../.env

        echo "Planning Terraform changes..."
        terraform plan -out=tfplan

  - task: AzureCLI@2
    displayName: 'Terraform Apply'
    inputs:
      azureSubscription: 'bestrong-azure-connection'
      scriptType: bash
      scriptLocation: inlineScript
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      inlineScript: |
        echo "Sourcing environment variables..."
        source ../.env

        echo "Applying Terraform plan..."
        terraform apply -auto-approve tfplan
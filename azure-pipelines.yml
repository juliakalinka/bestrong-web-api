name: Build, Push Deploy, & Manage Infrastructure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "main"

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 1: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # Step 2: Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest .

      # Step 3: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest

  terraform:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 1: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.5.7'

      # Step 2: Initialize Terraform
      - name: Terraform Init
        run: |
          terraform init -backend-config="storage_account_name=${{ secrets.TF_STATE_STORAGE_ACCOUNT }}" \
                         -backend-config="container_name=${{ secrets.TF_STATE_CONTAINER }}" \
                         -backend-config="key=terraform.tfstate" \
                         -backend-config="resource_group_name=${{ secrets.TF_STATE_RG }}"

      # Step 3: Terraform Validate
      - name: Terraform Validate
        run: |
          terraform validate

      # Step 4: Terraform Plan
      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan -var="docker_image=${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest" \
                         -var="client_id=${{ secrets.TF_VAR_client_id }}" \
                         -var="client_secret=${{ secrets.TF_VAR_client_secret }}" \
                         -var="tenant_id=${{ secrets.TF_VAR_tenant_id }}" \
                         -var="subscription_id=${{ secrets.TF_VAR_subscription_id }}" \

      # Step 5: Terraform Apply
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve tfplan

  deploy_to_azure:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 1: Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 2: Deploy Docker image to Azure App Service
      - name: Deploy Docker image to Azure App Service
        run: |
          az webapp config container set \
            --name ${{ secrets.AZURE_APP_SERVICE_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --docker-custom-image-name ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest \
            --docker-registry-server-url https://index.docker.io
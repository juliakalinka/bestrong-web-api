trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

resources:
  repositories:
    - repository: self
      type: github
      connection: github-bestrong-connection
      name: $(Build.Repository.Name)
      ref: $(Build.SourceBranch)

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: terraformVersion
    value: '1.5.7'
  - name: workingDirectory
    value: '$(System.DefaultWorkingDirectory)/terraform'
  - group: terraform-vars

steps:
  - checkout: self
  - task: DownloadSecureFile@1
    name: downloadTfvars
    inputs:
      secureFile: '.env'

  - task: AzureCLI@2
    displayName: 'Install Terraform'
    inputs:
      azureSubscription: 'bestrong-azure-connection'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        curl -LO https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
        unzip terraform_$(terraformVersion)_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform -version

  - task: Bash@3
    displayName: 'Convert Environment File to Unix Format'
    inputs:
      targetType: 'inline'
      script: |
        tr -d '\r' < "$(downloadTfvars.secureFilePath)" > unix_env_file.tmp
        cp unix_env_file.tmp "$(downloadTfvars.secureFilePath)"
        rm unix_env_file.tmp
        echo "Environment file converted to Unix format"
  
  - task: AzureCLI@2
    displayName: 'Terraform Init'
    inputs:
      azureSubscription: 'bestrong-azure-connection'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        set -a
        source $(downloadTfvars.secureFilePath)
        set +a
        
        export TF_VAR_subscription_id=$(echo "$TF_VAR_subscription_id" | tr -d '\r')
        echo "Using subscription ID: $TF_VAR_subscription_id"
        
        terraform init \
          -backend-config="storage_account_name=$(TF_STATE_SA)" \
          -backend-config="container_name=$(TF_STATE_CONTAINER)" \
          -backend-config="resource_group_name=$(TF_STATE_RG)"
      workingDirectory: '$(workingDirectory)'

  - task: AzureCLI@2
    displayName: 'Terraform Plan'
    condition: eq(variables['Build.Reason'], 'PullRequest')
    inputs:
      azureSubscription: 'bestrong-azure-connection'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        set -a
        source $(downloadTfvars.secureFilePath)
        set +a
        
        export TF_VAR_subscription_id=$(echo "$TF_VAR_subscription_id" | tr -d '\r')
        echo "Using subscription ID: $TF_VAR_subscription_id"
        
        terraform plan -out=tfplan -var-file=$(downloadTfvars.secureFilePath)
      workingDirectory: '$(workingDirectory)'

  - task: AzureCLI@2
    displayName: 'Terraform Apply'
    condition: eq(variables['Build.SourceBranchName'], 'main')
    inputs:
      azureSubscription: 'bestrong-azure-connection'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        set -a
        source $(downloadTfvars.secureFilePath)
        set +a
        
        export TF_VAR_subscription_id=$(echo "$TF_VAR_subscription_id" | tr -d '\r')
        echo "Using subscription ID: $TF_VAR_subscription_id"
        
        terraform apply -auto-approve tfplan
      workingDirectory: '$(workingDirectory)'